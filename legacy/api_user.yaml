apiVersion: v1
kind: Service
metadata:
  name: api-user
  namespace: cookeasy
  labels:
    app: api-user
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: api-user
  type: LoadBalancer
---
apiVersion: v1
kind: Secret
metadata:
    name: api-user
    namespace: cookeasy
data:
    KEYCLOAK_ADMIN: YXBpX3VzZXI=
    KEYCLOAK_ADMIN_PASSWORD: QVBJX1VTRVIuMjAyMiEwMQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: api-user
    namespace: cookeasy
data:
    KC_PROXY: edge
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: api-user
#   namespace: cookeasy
#   labels:
#     app: api-user
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: api-user
#   template:
#     metadata:
#       labels:
#         app: api-user
#     spec:
#       containers:
#       - name: api-user
#         image: quay.io/keycloak/keycloak:17.0.0
#         args: ["start-dev"]
#         env:
#         - name: KEYCLOAK_ADMIN
#           value: "admin"
#         - name: KEYCLOAK_ADMIN_PASSWORD
#           value: "admin"
#         - name: KC_PROXY
#           value: "edge"
#         ports:
#         - name: http
#           containerPort: 8080
#         readinessProbe:
#           httpGet:
#             path: /realms/master
#             port: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: api-user
    namespace: cookeasy
    labels:
        app: cookeasy
spec:
    serviceName: api-user
    replicas: 1
    selector:
        matchLabels:
            app: api-user
    template:
        metadata:
            labels:
                app: api-user
        spec:
            containers:
            - name: api-user
              image: haingue/api-user:arm64
              args: ["start-dev"]
              command: ["printenv"]
              imagePullPolicy: Always # IfNotPresent
              volumeMounts:
              - name: api-user-data
                mountPath: /opt/jboss/keycloak/data
              envFrom:
              - configMapRef: { name: api-user }
              - secretRef: { name: api-user }
              # readinessProbe:
              #   httpGet:
              #     path: /realms/master
              #     port: 8080
    volumeClaimTemplates:
    - metadata:
        name: api-user-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
            requests:
                storage: 100Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-user-ingress
  namespace: cookeasy
spec:
  rules:
  - host: api-user.haingue.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-user
            port:
              number: 8080
